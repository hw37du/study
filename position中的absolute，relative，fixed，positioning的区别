一位用户在论坛中问：
我是Web设计的新手，我永远无法掌握元素位置的差异。
我知道有绝对的，固定的和相对的。
还有其他吗？
而且，它们有很大不同吗？
那你什么时候应该使用呢？
简短的回答：是的，还有一个“静态”，这是默认值。
是的，它们有很大的不同。
它们每个都非常有用，您当然应该使用哪个取决于所需的结果。
另外，不要忘记浮动，这是定位的重要组成部分。
中等答案：我不会做一个“长答案”，因为不需要重写很多次以前写的内容，但是如果可以快速遍历每种类型，这里我将做一个“中等答案”。
我有时还会向人们推荐这个10步教程，该教程在解释它方面做得很好。
首先要理解的重要概念是，网页上的每个元素都是一个块。
从字面上看是一个矩形像素。
将元素设置为显示时，这很容易理解：
或者该元素在默认情况下为display：block;
这意味着您可以设置宽度和高度，并且该元素将对此予以尊重。
但是显示的元素：内联；与默认情况下一样，也是矩形，它们只是以不同的方式流入页面，并尽可能水平排列。
既然您将每个页面元素都描绘成一个像素块，那么我们可以讨论一下如何使用定位来将像素块准确地获取到想要的位置。
我们将不再讨论盒子模型，但这也是其中的原因...

static。
这是每个页面元素的默认设置。
不同的元素没有不同的默认定位值，它们都以静态开始。
静态的意义不大。
这只是意味着该元素将像往常一样流入页面。
您将元素设置为position的唯一原因是：static;
是要强制删除已应用于控件外部元素的某些定位。
这是相当罕见的，因为定位不会级联。
Relative
这种定位可能是最容易混淆和误用的位置。
它真正的意思是“相对于自身”。
如果您设置位置：相对；
在没有其他定位属性（顶部，左侧，底部或右侧）的元素上，它对它的位置完全没有影响，这与将其保留为position时的情况完全相同。
但是，如果您给它其他一些定位属性，例如top：10px ;，它将把它的位置从通常的位置向下移10个像素。
我相信您可以想象，基于元素的常规位置来移动元素的功能非常有用。
我发现自己经常使用这种方法来排列表单元素，而这些元素倾向于不希望按照我的方式排列。
设置位置时还会发生其他两件事：相对；
在您应该注意的元素上。
其一是它引入了在该元素上使用z-index的功能，这实际上不适用于静态定位的元素。
即使您未设置z-index值，该元素现在也将出现在任何其他静态定位的元素之上。
您不能通过在静态定位的元素上设置更高的z-index值来对抗它。
发生的另一件事是它限制了绝对定位的子元素的范围。
作为相对定位元素的子元素的任何元素都可以绝对定位在该块内。
这带来了一些强大的机会，在此我将进行讨论。
Absolute
这是一种非常强大的定位类型，可让您将任何页面元素确切地放置在所需的位置。
您可以使用上，左，下定位属性。
并有权设置位置。
请记住，这些值将相对于具有相对（或绝对）定位的下一个父元素。
如果没有这样的父级，它将默认一直返回到<html>元素本身，这意味着它将相对于页面本身放置。
关于绝对定位的权衡（也是要记住的最重要的事情）是将这些元素从页面上的元素流中删除。
具有这种定位类型的元素不会受到其他元素的影响，也不会影响其他元素。
每次您使用绝对定位时，都要考虑这一点。
过度使用或不当使用会限制您网站的灵活性。
Fixed
这种定位很少见，但肯定有其用途。
固定位置元素相对于视口或浏览器窗口本身定位。
滚动窗口时，视口不会改变，因此，固定位置的元素将保持在滚动页面时的位置，从而产生一种类似于老式“框架”时代的效果。
看一下这个站点。
（更新：无效链接，抱歉），左侧边栏已固定。
此网站是固定位置的优点和缺点，因此是一个完美的例子。
好处是，它可使导航始终显示在页面上，并在页面上产生有趣的效果。
不利的是，存在一些可用性问题。
在我较小的笔记本电脑上，侧边栏中的内容被切除，我无法向下滚动以查看其余内容。
另外，如果我一直向下滚动到页脚，它会与页脚内容重叠，使我无法看到所有内容。
这是一个很酷的效果，并且很有用，但需要进行全面测试。
